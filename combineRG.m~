redDir = '/Volumes/RecordingsLeventhal2/ChoiceTask/R0142/R0142-histology/R0142-IHC/Processed Images/VGLUT';
greenDir = '/Volumes/RecordingsLeventhal2/ChoiceTask/R0142/R0142-histology/R0142-IHC/Processed Images/GAD';

% no hidden files
redFiles = dir2(redDir,'R*');
redFileNames = natsort({redFiles(:).name}');
greenFiles = dir2(greenDir,'R*');
greenFileNames = natsort({greenFiles(:).name}');

findMatchingFiles(redFileNames,greenFileNames,redDir,greenDir)

function findMatchingFiles(redFileNames,greenFileNames,redDir,greenDir)
    prefFileExt = '.jpeg';
% %     saturationFactor = 1.5;
    decorrTols = [.001,.005,.02];
    % just use one list, needs to be in both anyways
    splits1 = cellfun(@(x) strsplit(x,'-'),redFileNames,'UniformOutput',false);
    splits2 = cellfun(@(x) x{3},splits1,'UniformOutput',false);
    [~,redSlides,redExts] = cellfun(@(x) fileparts(x),splits2,'UniformOutput',false);
    
    splits1 = cellfun(@(x) strsplit(x,'-'),greenFileNames,'UniformOutput',false);
    splits2 = cellfun(@(x) x{3},splits1,'UniformOutput',false);
    [~,greenSlides,greenExts] = cellfun(@(x) fileparts(x),splits2,'UniformOutput',false);
    
    % make sure file extensions match
    if numel(unique([greenExts;redExts])) > 1
        % non-standard extensions
        button = questdlg(['Multiple file extensions found. Can I repair these to ',prefFileExt,'? (required to continue)'],'findEmptySevFiles','Yes','No','No');
        if strcmp(button,'Yes')
            h = waitbar(0,'Moving files...');
            useFiles = redFileNames;
            useDir = redDir;
            totalFiles = numel(redFileNames) + numel(greenFileNames);
            fileCount = 1;
            for ii = 1:2
                if ii == 2; useFiles = greenFileNames; useDir = greenDir; end;
                for iFile = 1:length(useFiles)
                    waitbar(fileCount/totalFiles,h);
                    [~,name,ext] = fileparts(useFiles{iFile});
                    src = fullfile(useDir,[name,ext]);
                    dest = fullfile(useDir,[name,prefFileExt]);
                    if ~strcmp(src,dest)
                        movefile(src,dest);
                    end
                    fileCount = fileCount + 1;
                end
            end
            close(h);
            % call master function for user?
        else
            disp('Extensions left unmatched.');
        end
    end
    
    % perform registration
    % idxs of strings in unordered A&&B
    matchIdx = ismember(redSlides,greenSlides);
    h = waitbar(0,'');
    for redIdx = 1:length(matchIdx)
        if ~matchIdx(redIdx); continue; end;
        [~,greenIdx] = ismember(redSlides(redIdx),greenSlides);
        waitbar(redIdx/length(matchIdx),h,[redSlides{redIdx},' [registering]...']);
        greenFile = fullfile(greenDir,greenFileNames{greenIdx});
        redFile = fullfile(redDir,redFileNames{redIdx});
        imGreen = imread(greenFile);
        imGreen = squeeze(imGreen(:,:,2));
        imRed = imread(redFile);
        imRed = squeeze(imRed(:,:,1));
        [optimizer,metric] = imregconfig('Multimodal');
        % registered should be green transformed [ ] test this
        [registered,~] = imregister(imGreen,imRed,'similarity',optimizer,metric);
%         figure; imshowpair(imRed,registered);
        imBlend = cat(3, imRed, registered, zeros(size(imRed)));
%         figure;imshow(imBlend);

% %         imBlendHSV = rgb2hsv(imBlend);
% %         imBlendHSV(:,:,2) = imBlendHSV(:,:,2) .* saturationFactor;
% %         imBlendSaturated = hsv2rgb(imBlendHSV);
% %         figure; imshow(imBlendSaturated);
        saveDir = strsplit(redDir,filesep);
        saveDir = strjoin(saveDir(1:end-1),filesep);
        for iTols = 1:size(decorrTols,2)
            tolStr = strrep(num2str(decorrTols(iTols)),'.','-');
            blendDir = fullfile(saveDir,['blended_tol',tolStr]);
            % mkdir on first loop
            if redIdx == 1
                if ~exist(blendDir)
                    mkdir(blendDir);
                end
            end
            waitbar(redIdx/length(matchIdx),h,[redSlides{redIdx},' [registering] --> [writing tol',tolStr,']...']);
            S = decorrstretch(imBlend,'tol',decorrTols(iTols));
            blendSavePath = fullfile(blendDir,[strjoin([splits1{1,1}{1},redSlides(redIdx),tolStr],'-'),prefFileExt]);
            imwrite(S,blendSavePath);
        end
    end
    close(h);
end

% imred = imread('/Volumes/RecordingsLeventhal2/ChoiceTask/R0142/R0142-histology/R0142-IHC/Processed Images/VGLUT/R0142-VGLUT-slide6a');
% imgreen = imread('/Volumes/RecordingsLeventhal2/ChoiceTask/R0142/R0142-histology/R0142-IHC/Processed Images/GAD/R0142-GAD-slide6a');
% 
% imnew = zeros(size(imred));
% imnew(1:size(imred))